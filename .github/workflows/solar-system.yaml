name: Solar-system-workflow

on:
    workflow_dispatch:
    push:
        branches:
            - main

env:
  MONGO_URI: 'mongodb://localhost:27017/testdb'

jobs:
    unit-testing:
        name: Unit Testing
        strategy:
            matrix:
                node-version: [18]
                os: [ubuntu-latest]
        runs-on: ${{ matrix.os }}
        services:
            mongo:
                image: mongo:latest
                ports:
                    - 27017:27017
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Setup Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                node-version: ${{ matrix.node-version }}

            - name: Cache Dependencies
              uses: actions/cache@v4
              with:
                path: node_modules
                key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

            - name: Install Dependencies
              run: npm install

            - name: Wait for MongoDB to be Ready
              run: sleep 20

            - name: Run Database Initialization Script
              run: node initDB.js

            - name: Run Unit Tests
              run: npm test
            - name: Archive test results
              uses: actions/upload-artifact@v4
              with:
                name: test-results-${{ github.run_id }}
                path: test-results.xml
    Code-Coverage:
        name: Code Coverage
        services:
            mongo:
                image: mongo:latest
                ports:
                    - 27017:27017
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4
            - name: Setup Nodejs 18
              uses: actions/setup-node@v4
              with: 
                node-version: 18

            - name: Cache Dependencies
              uses: actions/cache@v4
              with:
                path: node_modules
                key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
                
                
            - name: Install Dependencies
              run: npm install
            - name: Wait for MongoDB to be Ready
              run: sleep 20
            - name: Run Database Initialization Script
              run: node initDB.js
            - name: Run Code Coverage
              run: npm run coverage
            - name: Archive Coverage Report
              uses: actions/upload-artifact@v4
              with:
                name: coverage-${{ github.run_id }}
                path: coverage
                retention-days: 1
    Docker:
        name: login-docker
        needs: [unit-testing, Code-Coverage]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4
            - name: Login to Docker Hub
              uses: docker/login-action@v2.2.0
              with:
                username: ${{ vars.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}
            - name: Build Docker Image
              run: docker build -t solar-system .
            - name: Tag Docker Image
              run: docker tag solar-system ${{ vars.DOCKER_USERNAME }}/solar-system:latest
            - name: Push Docker Image
              run: docker push ${{ vars.DOCKER_USERNAME }}/solar-system:latest