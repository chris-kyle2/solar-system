name: ALB Setup

on:
  workflow_dispatch:

jobs:
  alb-setup:
    runs-on: ubuntu-latest

    env:
      CLUSTER_NAME: eksdemo2  # Change this to your cluster name
      REGION: us-east-1            # Change this to your region
      VPC_ID: vpc-083b78f365bff846d        # Change this to your VPC ID
      ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }}
      
      - name: Get OIDC Provider ID
        id: oidc
        run: |
          oidc_id=$(aws eks describe-cluster --name ${{ env.CLUSTER_NAME }} --query "cluster.identity.oidc.issuer" --output text | cut -d '/' -f 5)
          echo "OIDC_ID=$oidc_id" >> $GITHUB_ENV
      - name: Install EKS CLI
        run: |
            # for ARM systems, set ARCH to: `arm64`, `armv6` or `armv7`
            ARCH=amd64
            PLATFORM=$(uname -s)_$ARCH

            curl -sLO "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz"

             # (Optional) Verify checksum
            curl -sL "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_checksums.txt" | grep $PLATFORM | sha256sum --check

            tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp && rm eksctl_$PLATFORM.tar.gz

            sudo mv /tmp/eksctl /usr/local/bin
      - name: Create OIDC Provider (if not exists)
        run: |
          eksctl utils associate-iam-oidc-provider --cluster ${{ env.CLUSTER_NAME }} --approve

      - name: Download ALB Controller IAM Policy
        run: |
          curl -o iam_policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.11.0/docs/install/iam_policy.json

      - name: Create ALB Controller IAM Policy
        id: create-policy
        run: |
          aws iam create-policy \
            --policy-name AWSLoadBalancerControllerIAMPolicy \
            --policy-document file://iam_policy.json || echo "Policy already exists"

      - name: Create ALB Controller IAM Role
        run: |
              eksctl create iamserviceaccount \
                --cluster=${{ env.CLUSTER_NAME }} \
                --namespace=kube-system \
                --name=aws-load-balancer-controller \
                --role-name=AmazonEKSLoadBalancerControllerRole \
                --attach-policy-arn=arn:aws:iam::${{ env.ACCOUNT_ID }}:policy/AWSLoadBalancerControllerIAMPolicy \
                --approve \
                --region=${{ env.REGION }} \
                --override-existing-serviceaccounts
          
      - name: Add Helm repo for ALB Controller
        run: |
            helm repo add eks https://aws.github.io/eks-charts
            helm repo update
              
      - name: Install Kubectl CLI
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.26.0'
              
      - name: Adding Context to kubectl
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}
              
      - name: Deploy AWS Load Balancer Controller via Helm
        run: |
            helm upgrade --install aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system --set clusterName=${{ env.CLUSTER_NAME }} --set serviceAccount.create=false --set serviceAccount.name=aws-load-balancer-controller --set region=${{ env.REGION }} --set vpcId=${{ env.VPC_ID }}

              

      - name: Verify ALB Controller Deployment
        run: |
          kubectl get deployment -n kube-system aws-load-balancer-controller

      - name: Check ALB Controller Policy Permissions
        id: check-policy
        run: |
          aws iam get-policy-version \
            --policy-arn arn:aws:iam::${{ env.ACCOUNT_ID }}:policy/AWSLoadBalancerControllerIAMPolicy \
            --version-id $(aws iam get-policy --policy-arn arn:aws:iam::${{ env.ACCOUNT_ID }}:policy/AWSLoadBalancerControllerIAMPolicy --query 'Policy.DefaultVersionId' --output text) > current_policy.json

          if ! grep -q "elasticloadbalancing:DescribeListenerAttributes" current_policy.json; then
            echo "Policy permission missing, needs updating"
            echo "UPDATE_NEEDED=true" >> $GITHUB_ENV
          else
            echo "All required permissions are present."
          fi

      - name: Update ALB Controller IAM Policy (if missing permissions)
        if: env.UPDATE_NEEDED == 'true'
        run: |
          jq '.Statement += [{"Effect": "Allow", "Action": "elasticloadbalancing:DescribeListenerAttributes", "Resource": "*"}]' current_policy.json > updated_policy.json

          aws iam create-policy-version \
            --policy-arn arn:aws:iam::${{ env.ACCOUNT_ID }}:policy/AWSLoadBalancerControllerIAMPolicy \
            --policy-document file://updated_policy.json \
            --set-as-default
